CREATE TABLE ITEM(ITEMID INT PRIMARY KEY,TYPE VARCHAR(20));
CREATE TABLE STOCK(STOCKID INT PRIMARY KEY,ITEMID INT,QTYREMAIN INT,DATESOLD DATE,foreign key(ITEMID)references ITEM(ITEMID));
CREATE TABLE SALE(SALEID INT,ITEMID INT,QTYSOLD INT,DATESU DATE,foreign key(ITEMID) references ITEM(ITEMID));
INSERT  INTO ITEM VALUES(1,'PENCIL');
INSERT  INTO ITEM VALUES(2,'RUBBER');
INSERT  INTO ITEM VALUES(3,'SCALE');
SELECT * FROM ITEM;
INSERT INTO STOCK VALUES(100,1,100,'20-JAN-2024');
INSERT INTO STOCK VALUES(101,2,150,'31-MAR-2024');
INSERT INTO STOCK VALUES(102,3,60,'12-FEB-2024');
SELECT * FROM STOCK;

CREATE OR REPLACE TRIGGER trig 
BEFORE INSERT ON SALE
FOR EACH ROW
BEGIN
 UPDATE STOCK SET QTYREMAIN=QTYREMAIN-:NEW.QTYSOLD WHERE ITEMID=:NEW.ITEMID;
END trig;
/
INSERT INTO SALE VALUES(11,1,50,'14-FEB-2024');
INSERT INTO SALE VALUES(12,2,67,'24-APR-2024');
INSERT INTO SALE VALUES(13,3,10,'14-FEB-2024');
SELECT * FROM STOCK;

SET SERVEROUTPUT ON;
DECLARE 
  CURSOR cur IS
   SELECT * FROM STOCK;
  cur1 cur%ROWTYPE;
  dur number;
  durr DATE;
BEGIN
 OPEN cur;
  LOOP
   FETCH cur INTO cur1;
   EXIT WHEN cur%NOTFOUND;
   SELECT S.DATESU
   INTO durr
   FROM SALE S
   WHERE S.ITEMID = cur1.ITEMID AND ROWNUM=1;
   dur:= cur1.DATESOLD- durr;
   DBMS_OUTPUT.PUT_LINE('DURATION FOR '||cur1.ITEMID||' IS'||dur);
   IF cur1.QTYREMAIN<=50 then
    DBMS_OUTPUT.PUT_LINE('QTY LOW FOR ITEM '||cur1.ITEMID);
   END IF;
   
  END LOOP;
 CLOSE cur;
END;
/
SHOW ERRORS;
